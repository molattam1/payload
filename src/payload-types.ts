/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    products: Product;
    testimonials: Testimonial;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    homepage: Homepage;
    'not-found': NotFound;
    footer: Footer;
    about: About;
  };
  globalsSelect: {
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    'not-found': NotFoundSelect<false> | NotFoundSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    about: AboutSelect<false> | AboutSelect<true>;
  };
  locale: 'en' | 'ar' | 'de' | 'ru';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  name: string;
  /**
   * URL slug per locale
   */
  slug: string;
  price: number;
  currency: 'USD' | 'EUR' | 'EGP' | 'GBP';
  description?: string | null;
  image?: (string | null) | Media;
  specChips?:
    | {
        label: string;
        id?: string | null;
      }[]
    | null;
  reassurance?:
    | {
        label: string;
        /**
         * Icon to render on the product page
         */
        iconKey?: ('truck' | 'shield' | 'check-circle-2') | null;
        id?: string | null;
      }[]
    | null;
  details?:
    | {
        title: string;
        body: string;
        id?: string | null;
      }[]
    | null;
  shippingNote?: string | null;
  ui: {
    homeLabel: string;
    productsLabel: string;
    backToProductsLabel: string;
    addToCartLabel: string;
    buyNowLabel: string;
    productDetailsHeading: string;
  };
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: string;
  quote: string;
  authorName: string;
  role?: string | null;
  authorImage?: (string | null) | Media;
  featured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: string | Testimonial;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  price?: T;
  currency?: T;
  description?: T;
  image?: T;
  specChips?:
    | T
    | {
        label?: T;
        id?: T;
      };
  reassurance?:
    | T
    | {
        label?: T;
        iconKey?: T;
        id?: T;
      };
  details?:
    | T
    | {
        title?: T;
        body?: T;
        id?: T;
      };
  shippingNote?: T;
  ui?:
    | T
    | {
        homeLabel?: T;
        productsLabel?: T;
        backToProductsLabel?: T;
        addToCartLabel?: T;
        buyNowLabel?: T;
        productDetailsHeading?: T;
      };
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  quote?: T;
  authorName?: T;
  role?: T;
  authorImage?: T;
  featured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: string;
  hero: {
    title: string;
    subtitle?: string | null;
    primaryCTA?: string | null;
    primaryLink?: string | null;
    secondaryCTA?: string | null;
    secondaryLink?: string | null;
    deviceImage?: (string | null) | Media;
  };
  features?:
    | {
        title: string;
        description?: string | null;
        style?: ('big' | 'icon' | 'shape' | 'tall' | 'wide') | null;
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  gallery?:
    | {
        label?: string | null;
        image?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  testimonials?:
    | {
        quote: string;
        name: string;
        role?: string | null;
        id?: string | null;
      }[]
    | null;
  cta?: {
    headline?: string | null;
    description?: string | null;
    ctaLabel?: string | null;
    ctaLink?: string | null;
  };
  ticker?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "not-found".
 */
export interface NotFound {
  id: string;
  title: string;
  subtitle?: string | null;
  ctaLabel?: string | null;
  ctaLink?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  brand: {
    name: string;
    tagline?: string | null;
    email?: string | null;
  };
  socials?:
    | {
        label?: string | null;
        url?: string | null;
        icon?: string | null;
        id?: string | null;
      }[]
    | null;
  columns?:
    | {
        title?: string | null;
        links?:
          | {
              label?: string | null;
              href?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  legalNote?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: string;
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    ogImage?: (string | null) | Media;
  };
  hero?: {
    kicker?: string | null;
    title?: string | null;
    subtitle?: string | null;
    primaryCTA?: {
      label?: string | null;
      href?: string | null;
    };
    secondaryCTA?: {
      label?: string | null;
      href?: string | null;
    };
  };
  mission?: {
    title?: string | null;
    body?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  values?:
    | {
        title?: string | null;
        /**
         * Optional lucide icon name (e.g. 'Cpu')
         */
        icon?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  stats?: {
    title?: string | null;
    items?:
      | {
          value?: string | null;
          label?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Small note under stats
     */
    disclaimer?: string | null;
  };
  team?: {
    title?: string | null;
    blurb?: string | null;
    members?:
      | {
          name?: string | null;
          role?: string | null;
          avatar?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  timeline?: {
    title?: string | null;
    items?:
      | {
          badge?: string | null;
          text?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  footer?: {
    pitch?: string | null;
    cta?: {
      label?: string | null;
      href?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        primaryCTA?: T;
        primaryLink?: T;
        secondaryCTA?: T;
        secondaryLink?: T;
        deviceImage?: T;
      };
  features?:
    | T
    | {
        title?: T;
        description?: T;
        style?: T;
        icon?: T;
        id?: T;
      };
  gallery?:
    | T
    | {
        label?: T;
        image?: T;
        id?: T;
      };
  testimonials?:
    | T
    | {
        quote?: T;
        name?: T;
        role?: T;
        id?: T;
      };
  cta?:
    | T
    | {
        headline?: T;
        description?: T;
        ctaLabel?: T;
        ctaLink?: T;
      };
  ticker?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "not-found_select".
 */
export interface NotFoundSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  ctaLabel?: T;
  ctaLink?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  brand?:
    | T
    | {
        name?: T;
        tagline?: T;
        email?: T;
      };
  socials?:
    | T
    | {
        label?: T;
        url?: T;
        icon?: T;
        id?: T;
      };
  columns?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              label?: T;
              href?: T;
              id?: T;
            };
        id?: T;
      };
  legalNote?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        ogImage?: T;
      };
  hero?:
    | T
    | {
        kicker?: T;
        title?: T;
        subtitle?: T;
        primaryCTA?:
          | T
          | {
              label?: T;
              href?: T;
            };
        secondaryCTA?:
          | T
          | {
              label?: T;
              href?: T;
            };
      };
  mission?:
    | T
    | {
        title?: T;
        body?: T;
      };
  values?:
    | T
    | {
        title?: T;
        icon?: T;
        description?: T;
        id?: T;
      };
  stats?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              value?: T;
              label?: T;
              id?: T;
            };
        disclaimer?: T;
      };
  team?:
    | T
    | {
        title?: T;
        blurb?: T;
        members?:
          | T
          | {
              name?: T;
              role?: T;
              avatar?: T;
              id?: T;
            };
      };
  timeline?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              badge?: T;
              text?: T;
              id?: T;
            };
      };
  footer?:
    | T
    | {
        pitch?: T;
        cta?:
          | T
          | {
              label?: T;
              href?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}